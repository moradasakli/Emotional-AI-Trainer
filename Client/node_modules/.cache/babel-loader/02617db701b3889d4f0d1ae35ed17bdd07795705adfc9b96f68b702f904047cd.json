{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morad\\\\Desktop\\\\Emotion Web\\\\Client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    username: '',\n    token: '',\n    score: 0\n  });\n\n  // Retrieve authentication state from localStorage on app initialization\n  useEffect(() => {\n    const storedAuth = localStorage.getItem('auth');\n    if (storedAuth) {\n      setAuth(JSON.parse(storedAuth));\n    }\n  }, []);\n\n  // Save authentication state to localStorage whenever it changes\n  useEffect(() => {\n    if (auth.username) {\n      localStorage.setItem('auth', JSON.stringify(auth));\n    }\n  }, [auth]);\n  const logout = () => {\n    setAuth({\n      username: '',\n      token: '',\n      score: 0\n    });\n    localStorage.removeItem('auth'); // Clear storage on logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Z+wQy+clt2gupYDy6DHvRUeqdTk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","username","token","score","storedAuth","localStorage","getItem","JSON","parse","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/morad/Desktop/Emotion Web/Client/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [auth, setAuth] = useState({ username: '', token: '', score: 0 });\n\n  // Retrieve authentication state from localStorage on app initialization\n  useEffect(() => {\n    const storedAuth = localStorage.getItem('auth');\n    if (storedAuth) {\n      setAuth(JSON.parse(storedAuth));\n    }\n  }, []);\n\n  // Save authentication state to localStorage whenever it changes\n  useEffect(() => {\n    if (auth.username) {\n      localStorage.setItem('auth', JSON.stringify(auth));\n    }\n  }, [auth]);\n\n  const logout = () => {\n    setAuth({ username: '', token: '', score: 0 });\n    localStorage.removeItem('auth'); // Clear storage on logout\n  };\n\n  return (\n    <AuthContext.Provider value={{ auth, setAuth, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;;EAEvE;EACAX,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACdJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,CAACE,QAAQ,EAAE;MACjBI,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACX,IAAI,CAAC,CAAC;IACpD;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBX,OAAO,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC,CAAC;IAC9CE,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEC,OAAO;MAAEW;IAAO,CAAE;IAAAd,QAAA,EACpDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CA5BWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}