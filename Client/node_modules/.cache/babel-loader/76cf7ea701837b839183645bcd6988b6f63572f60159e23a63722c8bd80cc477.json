{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import'../Exam.css';import{AuthContext}from'../context/AuthContext';// Import AuthContext for current user\nimport{Helmet}from'react-helmet';import logo from'../images/logo.png';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Exam=()=>{const[questions,setQuestions]=useState([]);const[options,setOptions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState({});const[categories,setCategories]=useState([]);const[results,setResults]=useState(null);const[lowestCategoryInfo,setLowestCategoryInfo]=useState(null);// State for lowest category info\nconst{auth}=useContext(AuthContext);// Correctly access username from context\nuseEffect(()=>{// Reset state when component mounts or when retaking the exam\nsetQuestions([]);setOptions([]);setCurrentQuestionIndex(0);setAnswers({});setCategories([]);setResults(null);setLowestCategoryInfo(null);// Fetch the questions and options from exam.json\nfetch('/exam.json').then(response=>response.json()).then(data=>{setQuestions(data.questions);setOptions(data.options);const uniqueCategories=[...new Set(data.questions.map(q=>q.category))];setCategories(uniqueCategories);}).catch(error=>console.error('Error loading questions:',error));},[]);// Empty dependency array to run only on mount\nconst handleAnswerClick=grade=>{setAnswers({...answers,[currentQuestionIndex]:grade});};const nextQuestion=()=>{if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const previousQuestion=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(currentQuestionIndex-1);}};const finishExam=async()=>{if(!auth.username){console.error('Username is undefined');return;}try{const categoryScores={};categories.forEach(category=>{const categoryQuestions=questions.filter(q=>q.category===category);const totalQuestions=categoryQuestions.length;const totalScore=categoryQuestions.reduce((sum,question)=>{const questionIndex=questions.indexOf(question);return sum+(answers[questionIndex]||0);},0);const maxScore=totalQuestions*options[0].grade;const percentage=totalScore/maxScore*100;categoryScores[category]=percentage.toFixed(2);});const overallAverage=Object.values(categoryScores).reduce((sum,score)=>sum+parseFloat(score),0)/categories.length;setResults({categoryScores,overallAverage:overallAverage.toFixed(2)});// Identify the lowest and second-lowest categories, excluding \"Other\" if it's the lowest\nconst sortedCategories=Object.entries(categoryScores).sort((a,b)=>parseFloat(a[1])-parseFloat(b[1]));let lowestCategoryName=sortedCategories[0][0].toLowerCase().replace(/\\s+/g,'');// Convert to lowercase and remove spaces\nif(lowestCategoryName==='other'){lowestCategoryName=sortedCategories[1][0].toLowerCase().replace(/\\s+/g,'');// Use the second-lowest if \"Other\" is the lowest\n}console.log(`Fetching JSON file for category: ${lowestCategoryName}`);// Debugging log\n// Fetch the JSON file for the lowest or second-lowest category\ntry{const response=await fetch(`/categoryInfo/${lowestCategoryName}.json`);if(!response.ok){throw new Error(`JSON file not found for category: ${lowestCategoryName}`);}const data=await response.json();setLowestCategoryInfo(data);// Set the lowest category info\nconsole.log(`Data fetched successfully for category: ${lowestCategoryName}`,data);}catch(error){console.error('Error fetching category info:',error);}// Save exam results to the database\nfetch('https://server-phi-fawn.vercel.app/submit-exam',{// Use the full URL for your deployed server\nmethod:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:auth.username,// Make sure username is not undefined here\noverallAverage:parseFloat(overallAverage.toFixed(2))})}).then(response=>{if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}return response.json();}).then(data=>{console.log(data.message);}).catch(error=>{console.error('Error submitting exam results:',error);});}catch(error){console.error('Error:',error);}};const getCategoryIndex=category=>categories.indexOf(category)+1;if(questions.length===0||options.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"EmotionAI - Exam\"}),/*#__PURE__*/_jsx(\"link\",{rel:\"icon\",type:\"image/png\",href:logo,sizes:\"16x16\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exam-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-track\"}),categories.map((category,index)=>{const firstQuestionIndexInCategory=questions.findIndex(q=>q.category===category);const isCompleted=currentQuestionIndex>firstQuestionIndexInCategory;const isActive=currentQuestionIndex>=firstQuestionIndexInCategory&&currentQuestionIndex<firstQuestionIndexInCategory+questions.filter(q=>q.category===category).length;return/*#__PURE__*/_jsxs(\"div\",{className:`progress-step ${isCompleted?'completed':''} ${isActive?'active':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-step-circle\",children:index+1}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-step-text\",children:category})]},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-section\",children:results?/*#__PURE__*/_jsxs(\"div\",{className:\"results-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Results\"}),Object.entries(results.categoryScores).filter(_ref=>{let[category]=_ref;return category!==\"Other\";})// Filter out \"Other\" category\n.map((_ref2,index)=>{let[category,score]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"result-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result-bar-title\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"result-bar-track\",children:/*#__PURE__*/_jsx(\"div\",{className:`result-bar-fill result-bar-fill-${index}`// Add a unique class for each bar\n,style:{width:`${score}%`},children:/*#__PURE__*/_jsxs(\"span\",{className:\"result-bar-label\",children:[score,\"%\"]})})})]},category);}),/*#__PURE__*/_jsxs(\"div\",{className:\"overall-average-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overall-score-label\",children:\"Overall Score\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"circular-progress\",style:{'--percentage':`${results.overallAverage}%`},children:/*#__PURE__*/_jsxs(\"div\",{className:\"overall-average-text\",children:[results.overallAverage,\"%\"]})})]}),lowestCategoryInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"lowest-category-info\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#00796b'},children:lowestCategoryInfo.title1}),\" \",/*#__PURE__*/_jsx(\"p\",{children:lowestCategoryInfo.content1}),/*#__PURE__*/_jsx(\"h3\",{style:{color:'#00796b'},children:lowestCategoryInfo.title2}),\" \",/*#__PURE__*/_jsx(\"p\",{children:lowestCategoryInfo.content2}),/*#__PURE__*/_jsx(\"h3\",{style:{color:'#00796b'},children:lowestCategoryInfo.title3}),\" \",/*#__PURE__*/_jsx(\"ul\",{children:lowestCategoryInfo.content3.split('\\n').map((question,index)=>/*#__PURE__*/_jsx(\"li\",{children:question.trim()},index)// Trim whitespace and display each question in a list\n)}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'20px',color:'#d32f2f'},children:lowestCategoryInfo.title4})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:questions[currentQuestionIndex].text}),/*#__PURE__*/_jsx(\"div\",{className:\"options\",children:options.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{className:`option-button ${answers[currentQuestionIndex]===option.grade?'selected':''}`,onClick:()=>handleAnswerClick(option.grade),children:option.text},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-buttons\",children:[currentQuestionIndex>0&&/*#__PURE__*/_jsx(\"button\",{onClick:previousQuestion,children:\"Previous\"}),answers[currentQuestionIndex]!==undefined&&currentQuestionIndex<questions.length-1&&/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",onClick:nextQuestion,children:\"Next\"}),answers[currentQuestionIndex]!==undefined&&currentQuestionIndex===questions.length-1&&/*#__PURE__*/_jsx(\"button\",{onClick:finishExam,children:\"Finish\"})]})]})})]})]});};export default Exam;//last update : 27/8/2024 15:51","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Helmet","logo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Exam","questions","setQuestions","options","setOptions","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","categories","setCategories","results","setResults","lowestCategoryInfo","setLowestCategoryInfo","auth","fetch","then","response","json","data","uniqueCategories","Set","map","q","category","catch","error","console","handleAnswerClick","grade","nextQuestion","length","previousQuestion","finishExam","username","categoryScores","forEach","categoryQuestions","filter","totalQuestions","totalScore","reduce","sum","question","questionIndex","indexOf","maxScore","percentage","toFixed","overallAverage","Object","values","score","parseFloat","sortedCategories","entries","sort","a","b","lowestCategoryName","toLowerCase","replace","log","ok","Error","method","headers","body","JSON","stringify","status","message","getCategoryIndex","children","rel","type","href","sizes","className","index","firstQuestionIndexInCategory","findIndex","isCompleted","isActive","_ref","_ref2","style","width","color","title1","content1","title2","content2","title3","content3","split","trim","marginTop","title4","text","option","onClick","undefined"],"sources":["C:/Users/morad/Desktop/Emotion Web/Client/src/pages/Exam.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport '../Exam.css';\nimport { AuthContext } from '../context/AuthContext'; // Import AuthContext for current user\nimport { Helmet } from 'react-helmet';\nimport logo from '../images/logo.png'; \n\nconst Exam = () => {\n  const [questions, setQuestions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [results, setResults] = useState(null);\n  const [lowestCategoryInfo, setLowestCategoryInfo] = useState(null); // State for lowest category info\n  const { auth } = useContext(AuthContext); // Correctly access username from context\n\n  useEffect(() => {\n    // Reset state when component mounts or when retaking the exam\n    setQuestions([]);\n    setOptions([]);\n    setCurrentQuestionIndex(0);\n    setAnswers({});\n    setCategories([]);\n    setResults(null);\n    setLowestCategoryInfo(null);\n\n    // Fetch the questions and options from exam.json\n    fetch('/exam.json')\n      .then(response => response.json())\n      .then(data => {\n        setQuestions(data.questions);\n        setOptions(data.options);\n        const uniqueCategories = [...new Set(data.questions.map(q => q.category))];\n        setCategories(uniqueCategories);\n      })\n      .catch(error => console.error('Error loading questions:', error));\n  }, []); // Empty dependency array to run only on mount\n\n  const handleAnswerClick = (grade) => {\n    setAnswers({ ...answers, [currentQuestionIndex]: grade });\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const previousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const finishExam = async () => {\n    if (!auth.username) {\n      console.error('Username is undefined');\n      return;\n    }\n\n    try {\n      const categoryScores = {};\n      categories.forEach(category => {\n        const categoryQuestions = questions.filter(q => q.category === category);\n        const totalQuestions = categoryQuestions.length;\n        const totalScore = categoryQuestions.reduce((sum, question) => {\n          const questionIndex = questions.indexOf(question);\n          return sum + (answers[questionIndex] || 0);\n        }, 0);\n        const maxScore = totalQuestions * options[0].grade;\n        const percentage = (totalScore / maxScore) * 100;\n        categoryScores[category] = percentage.toFixed(2);\n      });\n\n      const overallAverage = Object.values(categoryScores).reduce((sum, score) => sum + parseFloat(score), 0) / categories.length;\n\n      setResults({ categoryScores, overallAverage: overallAverage.toFixed(2) });\n\n      // Identify the lowest and second-lowest categories, excluding \"Other\" if it's the lowest\n      const sortedCategories = Object.entries(categoryScores).sort((a, b) => parseFloat(a[1]) - parseFloat(b[1]));\n      let lowestCategoryName = sortedCategories[0][0].toLowerCase().replace(/\\s+/g, ''); // Convert to lowercase and remove spaces\n\n      if (lowestCategoryName === 'other') {\n        lowestCategoryName = sortedCategories[1][0].toLowerCase().replace(/\\s+/g, ''); // Use the second-lowest if \"Other\" is the lowest\n      }\n\n      console.log(`Fetching JSON file for category: ${lowestCategoryName}`); // Debugging log\n\n      // Fetch the JSON file for the lowest or second-lowest category\n      try {\n        const response = await fetch(`/categoryInfo/${lowestCategoryName}.json`);\n        if (!response.ok) {\n          throw new Error(`JSON file not found for category: ${lowestCategoryName}`);\n        }\n        const data = await response.json();\n        setLowestCategoryInfo(data); // Set the lowest category info\n        console.log(`Data fetched successfully for category: ${lowestCategoryName}`, data);\n      } catch (error) {\n        console.error('Error fetching category info:', error);\n      }\n\n      // Save exam results to the database\n      fetch('https://server-phi-fawn.vercel.app/submit-exam', { // Use the full URL for your deployed server\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username: auth.username, // Make sure username is not undefined here\n          overallAverage: parseFloat(overallAverage.toFixed(2)),\n        }),\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          console.log(data.message);\n        })\n        .catch(error => {\n          console.error('Error submitting exam results:', error);\n        });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const getCategoryIndex = (category) => categories.indexOf(category) + 1;\n\n  if (questions.length === 0 || options.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>    \n    <Helmet>\n    <title>EmotionAI - Exam</title>\n    <link rel=\"icon\" type=\"image/png\" href={logo} sizes=\"16x16\" />\n  </Helmet>\n\n    <div className=\"exam-container\">\n      <div className=\"progress-bar\">\n        <div className=\"progress-track\"></div>\n        {categories.map((category, index) => {\n          const firstQuestionIndexInCategory = questions.findIndex(q => q.category === category);\n          const isCompleted = currentQuestionIndex > firstQuestionIndexInCategory;\n          const isActive = currentQuestionIndex >= firstQuestionIndexInCategory && currentQuestionIndex < firstQuestionIndexInCategory + questions.filter(q => q.category === category).length;\n\n          return (\n            <div\n              key={index}\n              className={`progress-step ${isCompleted ? 'completed' : ''} ${isActive ? 'active' : ''}`}\n            >\n              <div className=\"progress-step-circle\">{index + 1}</div>\n              <div className=\"progress-step-text\">{category}</div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"question-section\">\n        {results ? (\n          <div className=\"results-section\">\n            <h2>Results</h2>\n            {Object.entries(results.categoryScores)\n              .filter(([category]) => category !== \"Other\") // Filter out \"Other\" category\n              .map(([category, score], index) => (\n                <div className=\"result-bar\" key={category}>\n                  <div className=\"result-bar-title\">{category}</div>\n                  <div className=\"result-bar-track\">\n                    <div\n                      className={`result-bar-fill result-bar-fill-${index}`} // Add a unique class for each bar\n                      style={{ width: `${score}%` }}>\n                      <span className=\"result-bar-label\">{score}%</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n            {/* Overall average circle */}\n            <div className=\"overall-average-container\">\n              <div className=\"overall-score-label\">Overall Score</div> {/* Label above the circle */}\n              <div className=\"circular-progress\" style={{ '--percentage': `${results.overallAverage}%` }}>\n                <div className=\"overall-average-text\">{results.overallAverage}%</div>\n              </div>\n            </div>\n\n            {/* Display additional information for the lowest category */}\n            {lowestCategoryInfo && (\n              <div className=\"lowest-category-info\">\n                <h3 style={{ color: '#00796b' }}>{lowestCategoryInfo.title1}</h3> {/* Changed color */}\n                <p>{lowestCategoryInfo.content1}</p>\n                <h3 style={{ color: '#00796b' }}>{lowestCategoryInfo.title2}</h3> {/* Changed color */}\n                <p>{lowestCategoryInfo.content2}</p>\n                <h3 style={{ color: '#00796b' }}>{lowestCategoryInfo.title3}</h3> {/* Changed color */}\n                <ul>\n                  {/* Split content3 into separate questions */}\n                  {lowestCategoryInfo.content3.split('\\n').map((question, index) => (\n                    <li key={index}>{question.trim()}</li> // Trim whitespace and display each question in a list\n                  ))}\n                </ul>\n                {/* Display the new title4 content */}\n                <h3 style={{ marginTop: '20px', color: '#d32f2f' }}>{lowestCategoryInfo.title4}</h3>\n              </div>\n            )}\n\n          </div>\n        ) : (\n          <>\n            <p>{questions[currentQuestionIndex].text}</p>\n            <div className=\"options\">\n              {options.map((option, index) => (\n                <button\n                  key={index}\n                  className={`option-button ${answers[currentQuestionIndex] === option.grade ? 'selected' : ''}`}\n                  onClick={() => handleAnswerClick(option.grade)}\n                >\n                  {option.text}\n                </button>\n              ))}\n            </div>\n            <div className=\"navigation-buttons\">\n              {currentQuestionIndex > 0 && (\n                <button onClick={previousQuestion}>Previous</button>\n              )}\n              {answers[currentQuestionIndex] !== undefined && currentQuestionIndex < questions.length - 1 && (\n                <button className=\"next-button\" onClick={nextQuestion}>Next</button>\n              )}\n              {answers[currentQuestionIndex] !== undefined && currentQuestionIndex === questions.length - 1 && (\n                <button onClick={finishExam}>Finish</button>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Exam;\n\n//last update : 27/8/2024 15:51 \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}