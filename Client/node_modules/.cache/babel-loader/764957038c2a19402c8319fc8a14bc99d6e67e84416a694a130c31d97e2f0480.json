{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[auth,setAuth]=useState({username:'',token:'',score:0});// Retrieve authentication state from localStorage on app initialization\nuseEffect(()=>{const storedAuth=localStorage.getItem('auth');if(storedAuth){setAuth(JSON.parse(storedAuth));}},[]);// Save authentication state to localStorage whenever it changes\nuseEffect(()=>{if(auth.username){localStorage.setItem('auth',JSON.stringify(auth));}},[auth]);const logout=()=>{setAuth({username:'',token:'',score:0});localStorage.removeItem('auth');// Clear storage on logout\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{auth,setAuth,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","auth","setAuth","username","token","score","storedAuth","localStorage","getItem","JSON","parse","setItem","stringify","logout","removeItem","Provider","value"],"sources":["C:/Users/morad/Desktop/Emotion Web/Client/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [auth, setAuth] = useState({ username: '', token: '', score: 0 });\n\n  // Retrieve authentication state from localStorage on app initialization\n  useEffect(() => {\n    const storedAuth = localStorage.getItem('auth');\n    if (storedAuth) {\n      setAuth(JSON.parse(storedAuth));\n    }\n  }, []);\n\n  // Save authentication state to localStorage whenever it changes\n  useEffect(() => {\n    if (auth.username) {\n      localStorage.setItem('auth', JSON.stringify(auth));\n    }\n  }, [auth]);\n\n  const logout = () => {\n    setAuth({ username: '', token: '', score: 0 });\n    localStorage.removeItem('auth'); // Clear storage on logout\n  };\n\n  return (\n    <AuthContext.Provider value={{ auth, setAuth, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,CAAEU,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAC,CAEvE;AACAX,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACdJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAZ,SAAS,CAAC,IAAM,CACd,GAAIO,IAAI,CAACE,QAAQ,CAAE,CACjBI,YAAY,CAACI,OAAO,CAAC,MAAM,CAAEF,IAAI,CAACG,SAAS,CAACX,IAAI,CAAC,CAAC,CACpD,CACF,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAY,MAAM,CAAGA,CAAA,GAAM,CACnBX,OAAO,CAAC,CAAEC,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAC,CAC9CE,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAE;AACnC,CAAC,CAED,mBACElB,IAAA,CAACC,WAAW,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEf,IAAI,CAAEC,OAAO,CAAEW,MAAO,CAAE,CAAAb,QAAA,CACpDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}