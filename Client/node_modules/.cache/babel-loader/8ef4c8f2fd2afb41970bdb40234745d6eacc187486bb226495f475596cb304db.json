{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morad\\\\Desktop\\\\Emotion Web\\\\Client\\\\src\\\\pages\\\\History.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js'; // Import Filler plugin\nimport { AuthContext } from '../context/AuthContext';\nimport { parse } from 'date-fns';\nimport { Helmet } from 'react-helmet';\nimport logo from '../images/logo.png';\n\n// Register the chart components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst History = () => {\n  _s();\n  const [historyData, setHistoryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    auth\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/history/${auth.username}`);\n        console.log('Fetched history (before sorting):', response.data);\n\n        // Parse and sort dates\n        const sortedHistory = response.data.sort((a, b) => {\n          const dateA = parse(a.date, 'dd/MM/yyyy', new Date());\n          const dateB = parse(b.date, 'dd/MM/yyyy', new Date());\n          console.log(`Comparing dates - Date A: ${dateA}, Date B: ${dateB}`);\n          return dateA - dateB;\n        });\n        console.log('Sorted history:', sortedHistory);\n        setHistoryData(sortedHistory);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching history:', error);\n        setLoading(false);\n      }\n    };\n    if (auth.username) {\n      fetchHistory();\n    }\n  }, [auth.username]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  const dates = historyData.map(entry => entry.date);\n  const scores = historyData.map(entry => entry.score_history);\n  console.log('Final dates for chart:', dates);\n  console.log('Final scores for chart:', scores);\n  const data = {\n    labels: dates,\n    datasets: [{\n      label: 'Score History',\n      data: scores,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"EmotionAI - History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        href: logo,\n        sizes: \"16x16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto mt-10 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 p-8 rounded shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800 dark:text-gray-200\",\n          children: \"Score History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(History, \"HtwUvZQC2Irc8sd7LqdEgysMS+c=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","AuthContext","parse","Helmet","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","register","History","_s","historyData","setHistoryData","loading","setLoading","auth","fetchHistory","response","get","username","console","log","data","sortedHistory","sort","a","b","dateA","date","Date","dateB","error","children","fileName","_jsxFileName","lineNumber","columnNumber","dates","map","entry","scores","score_history","labels","datasets","label","borderColor","backgroundColor","fill","rel","type","href","sizes","className","_c","$RefreshReg$"],"sources":["C:/Users/morad/Desktop/Emotion Web/Client/src/pages/History.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';  // Import Filler plugin\nimport { AuthContext } from '../context/AuthContext';\nimport { parse } from 'date-fns'; \nimport { Helmet } from 'react-helmet';\nimport logo from '../images/logo.png'; \n\n// Register the chart components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\nconst History = () => {\n  const [historyData, setHistoryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { auth } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/history/${auth.username}`);\n        console.log('Fetched history (before sorting):', response.data);\n\n        // Parse and sort dates\n        const sortedHistory = response.data.sort((a, b) => {\n          const dateA = parse(a.date, 'dd/MM/yyyy', new Date());\n          const dateB = parse(b.date, 'dd/MM/yyyy', new Date());\n          console.log(`Comparing dates - Date A: ${dateA}, Date B: ${dateB}`);\n          return dateA - dateB;\n        });\n\n        console.log('Sorted history:', sortedHistory);\n        setHistoryData(sortedHistory);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching history:', error);\n        setLoading(false);\n      }\n    };\n\n    if (auth.username) {\n      fetchHistory();\n    }\n  }, [auth.username]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  const dates = historyData.map(entry => entry.date);\n  const scores = historyData.map(entry => entry.score_history);\n\n  console.log('Final dates for chart:', dates);\n  console.log('Final scores for chart:', scores);\n\n  const data = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Score History',\n        data: scores,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true,\n      },\n    ],\n  };\n\n  return (\n    <>\n    <Helmet>\n      <title>EmotionAI - History</title>\n      <link rel=\"icon\" type=\"image/png\" href={logo} sizes=\"16x16\" />\n    </Helmet>\n\n\n\n\n    <div className=\"container mx-auto mt-10 px-4\">\n      <div className=\"bg-white dark:bg-gray-800 p-8 rounded shadow-md\">\n        <h1 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">Score History</h1>\n        <Line data={data} />\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default History;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}